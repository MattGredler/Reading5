Node is an application made by the developers of JavaScript so that it could be used outside of web browsers. Node uses its V8 engine to translate your higher level javascript and translates into lower level machine code that computers can then run faster. Node uses a non-blocking input output model so that it can act like a multi-threaded interpreter. This means that your applications can begin a process while your previous process is still being executed. 
JavaScript uses web APIs to make more than one call at a time, where Node uses C++ APIs. Call stack records where we are in a program. Blocking is code that is slow. Event loop looks at the stack at and look at the task cue to see if the stack is empty , if so it takes the first thing on the cue and pushes it to the stack. The event loop is like a back seat driver that tells you that the light is green when there is a pedestrian walking in your path. 
AJAX (which stand for Asynchronous JavaScript and XML) requests can include GET, POST, PUT and DELETE. If you set a timeout on functions in your call stack, it does not mean that that that process will begin at the end of that timeout, but rather that the callback timeout is the minimum time out before that operation can be processed depending on what other processes are being run. Render is given a higher priority in queue than the logic callback to give a better user experience. The benchmark for that user experience is to render every 16.6 (repeating, of course) seconds, or 60 FPS. 
Node has a feature called NPM, or Node Package Manager, that allows people to create and submit libraries that address common problems people have. In Node there is a function called require, which lets the client know what libraries they may need and automatically loads them. Node uses its V8 engine to Standardize JavaScript using C++. It can be embedded in any C++ application and makes JavaScript available for use. Events that use JavaScript are called Custom Events while System Events use its core C++.